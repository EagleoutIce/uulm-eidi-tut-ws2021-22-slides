\InputIfFileExists{../global.src}\relax\relax

\iffull
\def\smlll{\texorpdfstring{\def\RSsmallest{2pt}\smaller[2]}{}}
\title[Dreizehntes Tutorium -- Übungsblatt 13]{It is the final Count-Zauuuuuun\\\small Das Ende. Die 13 (Natürlich\ldots)}
\date{\sffamily KW 7}

\usepackage[glows]{tikzpingus}
\usetikzlibrary{decorations.text,matrix}
\hypersetup{colorlinks=false}

\begin{document}
\Titlepage{13}
\fi

\section{Übungsblatt 13}
\subsection{Aufgabe 1}

\iffull
\begin{frame}[c,fragile]{Übungsblatt 13 - Aufgabe 1}
\lstfs{9}%
\pause Gegeben sei folgende abstrakte Klasse \solGet{keywordC}{RegularPolygon}, welche ein Polygon mit gleichen Seitenlängen bzw. Innenwinkeln repräsentieren soll:
\begin{plainjava}[morekeywords={[3]{RegularPolygon}}]
public abstract class RegularPolygon {
    protected final int numSides;
    protected final double sideLength;

    public RegularPolygon(int numSides, double sideLength) {
        this.numSides = numSides;
        this.sideLength = sideLength;
    }

    public int getNumSides() { return this.numSides; }
    public double getCircumference() { return this.numSides * this.sideLength; }
    public abstract double getArea();
}
\end{plainjava}
\end{frame}

\begin{frame}[c,fragile]{Übungsblatt 13 - Aufgabe 1}
\small\begin{enumerate}
    \item<2-> Implementieren Sie nun die zwei Klassen \solGet{keywordC}{EquilateralTriangle} und \solGet{keywordC}{Square}, welche ein gleichseitiges Dreieck bzw. ein Quadrat repräsentieren sollen. Beide Klassen sollen jeweils von \solGet{keywordC}{RegularPolygon} erben, und müssen deshalb die Methode \bjava{public double getArea()} definieren. Zusätzlich sollen beide Klassen einen Konstruktor anbieten, welcher die Seitenlänge als Parameter übernimmt \info{\(A_\triangle = \frac{1}{4} \cdot \sqrt{3} \cdot a^2\)}.
    \item<2-> Wenn Sie die abstrakte Methode \bjava{public double getArea()} in den Subklassen implementieren, wird diese Methode dann überladen oder überschrieben? Begründen Sie ihre Antwort!
    \item<2-> Könnte die abstrakte Klasse auch durch ein Interface ersetzt werden? Falls ja, geben Sie ein entsprechendes Interface an, falls nein, begründen Sie warum dies nicht möglich ist.
    \item<2-> In der Vorlage wird der Modifier \bjava{protected} für die Instanzvariablen verwendet. Könnte hier auch der Modifier \bjava{private} verwendet werden? Begründen Sie ihre Antwort!
    \end{enumerate}
\end{frame}

\begin{frame}[c,fragile]{Übungsblatt 13 - Aufgabe 1}
\small\begin{enumerate}
    \item<2->[5.] Welche der Aufrufe in folgendem Testprogramm würden zu einem Compiler-Fehler führen und welche sind korrekt? Begründen Sie ihre Antwort!
    (Nehmen Sie für diese Teilaufgabe an, dass die beiden Klassen \solGet{keywordC}{Square} und \solGet{keywordC}{EquilateralTriangle} korrekt implementiert wurden.)
\begin{plainjava}[morekeywords={[3]{PolygonTest,RegularPolygon,EquilateralTriangle,Square}}]
public class PolygonTest {
   public static void main(String[] args) {
      RegularPolygon polygon = new EquilateralTriangle(3); // A 1
      EquilateralTriangle triangle = (EquilateralTriangle)polygon; // A 2
      Square square = new RegularPolygon(4, 4); // A 3
   }
}
\end{plainjava}
    \end{enumerate}
\end{frame}

\begin{frame}[c,fragile]{Übungsblatt 13 - Aufgabe 1}
\small\begin{enumerate}
    \item<2->[6.] Würden die folgenden Aufrufe der Methode \bjava{getArea} funktionieren? Falls ja, welche Werte würden entsprechend ausgegeben werden? Begründen Sie in jedem Fall ihre Antwort!
    (Nehmen Sie an, dass die beiden Klassen \solGet{keywordC}{Square} und \solGet{keywordC}{EquilateralTriangle} korrekt implementiert wurden.)
\begin{plainjava}[morekeywords={[3]{PolygonTest,RegularPolygon,PolygonAreaTest,EquilateralTriangle,Square}}]
public class PolygonAreaTest {
    public static void main(String[] args) {
        RegularPolygon polygon = new EquilateralTriangle(3);
        System.out.println(polygon.getArea());

        polygon = new Square(2);
        System.out.println(polygon.getArea());
    }
}
\end{plainjava}
    \end{enumerate}
\end{frame}
\fi

\begin{frame}[t,fragile]{Übungsblatt 13 - Aufgabe 1 a)\hfill EquilateralTriangle}
\SetupLstHl\begin{itemize}[<+(1)->]
    \item Gimme those classes (\only<2->{\textattachfile{\curpath EquilateralTriangle.java}{EquilateralTriangle.java}} und \only<2->{\textattachfile{\curpath Square.java}{Square.java}}):
\begin{plainjava}[morekeywords={[3]{PolygonTest,RegularPolygon,EquilateralTriangle,Square}},add to literate={@Override}{{\color{gray}@Override}}9]
!*\onslide<3->*!public class EquilateralTriangle extends RegularPolygon {
!*\onslide<4->*!    public EquilateralTriangle(int sideLength) {
!*\onslide<5->*!        super(3, sideLength);
!*\onslide<4->*!    }
!*\onslide<3->*!
!*\onslide<6->*!    @Override
!*\onslide<6->*!    public double getArea() {
!*\onslide<7->*!        return 0.25 * Math.sqrt(3) * sideLength * sideLength;
!*\onslide<6->*!    }
!*\onslide<3->*!}
\end{plainjava}
\end{itemize}
\end{frame}

\begin{frame}[c,fragile]{Übungsblatt 13 - Aufgabe 1 a)\hfill Square}
\SetupLstHl
\begin{plainjava}[morekeywords={[3]{PolygonTest,RegularPolygon,EquilateralTriangle,Square}},add to literate={@Override}{{\color{gray}@Override}}9]
!*\onslide<2->*!public class Square extends RegularPolygon {
!*\onslide<3->*!    public Square(int sideLength) {
!*\onslide<4->*!        super(4, sideLength);
!*\onslide<3->*!    }
!*\onslide<2->*!
!*\onslide<5->*!    @Override
!*\onslide<5->*!    public double getArea() {
!*\onslide<6->*!        return sideLength * sideLength;
!*\onslide<5->*!    }
!*\onslide<2->*!}
\end{plainjava}
\end{frame}


\begin{frame}[c,fragile]{Übungsblatt 13 - Aufgabe 1 b-d)}
\begin{itemize}[<+(1)->]
    \itemsep4pt
    \item \textcolor{gray}{Wenn Sie abstrakte Methode \bjava{public double getArea()} in den Subklassen implementieren, wird diese Methode dann überladen oder überschrieben?}\smallskip\par\pause
    Sie wird überschrieben: die \say{implementierende} Methode hat die selbe Signatur \info{siehe \href{https://docs.oracle.com/javase/specs/jls/se17/jls17.pdf\#page=309}{JLS17 8.4.8.1} für die genauen Regeln}.
    \item \textcolor{gray}{Könnte die abstrakte Klasse auch durch ein Interface ersetzt werden?}\smallskip\par
    \pause Das ist aus zwei Gründen nicht möglich: \begin{enumerate}
        \item<6-> Die Klasse hat einen Konstruktor.
        \item<7-> Die Klasse enthält Instanzvariablen.
    \end{enumerate}
    \onslide<8->{\textit{Schnittstellen} definieren das Verhalten. \textit{Keinen} Zustand!}
    \item<9-> \textcolor{gray}{In der Vorlage wird der Modifier \bjava{protected} für die Instanzvariablen verwendet. Könnte hier auch der Modifier \bjava{private} für beide verwendet werden?}\smallskip\par
    \onslide<10->{Für \bjava{numSides} ist dies möglich, diese Variable wird nur in \solGet{keywordC}{RegularPolygon} gebraucht.}
    \onslide<11->{Für \bjava{sideLength} allerdings nicht, wir benötigen diese für \bjava{getArea()}.}
\end{itemize}
\end{frame}

\begin{frame}[c,fragile]{Übungsblatt 13 - Aufgabe 1 e)}
\lstfs{10}\SetupLstHl\begin{plainjava}[morekeywords={[3]{PolygonTest,RegularPolygon,EquilateralTriangle,Square}}]
!*\onslide<2->*!|ihl|public class PolygonTest {|ihl|
!*\onslide<2->*!   |ihl|public static void main(String[] args) {|ihl|
!*\onslide<2->*!      RegularPolygon polygon = new EquilateralTriangle(3); // A 1
!*\onslide<2->*!      EquilateralTriangle triangle = (EquilateralTriangle)polygon; // A 2
!*\onslide<2->*!      Square square = new RegularPolygon(4, 4); // A 3
!*\onslide<2->*!   |ihl|}|ihl|
!*\onslide<2->*!|ihl|}|ihl|
\end{plainjava}
\begin{enumerate}
    \item<3-> Das ist fein, da \solGet{keywordC}{EquilateralTriangle} von \solGet{keywordC}{RegularPolygon} erbt und damit eine Spezialisierung darstellt! \info{Polymorphie}
    \item<4-> Durch die explizite Typkonvertierung ist dies fein. Implizit würde dies nicht funktionieren! So geht das aber, da \bjava{polygon} tatsächlich auf eine Instanz vom Typ \solGet{keywordC}{EquilateralTriangle} zeigt.
    \item<5-> Böse, wir können keine Instanz einer abstrakten Klasse erzeugen!
\end{enumerate}
\end{frame}


\begin{frame}[c,fragile]{Übungsblatt 13 - Aufgabe 1 f)}
\lstfs{10}\SetupLstHl\begin{plainjava}[morekeywords={[3]{PolygonTest,RegularPolygon,EquilateralTriangle,PolygonAreaTest,Square}}]
!*\onslide<2->*!|ihl|public class PolygonAreaTest {|ihl|
!*\onslide<2->*!    |ihl|public static void main(String[] args) {|ihl|
!*\onslide<2->*!        RegularPolygon polygon = new EquilateralTriangle(3);
!*\onslide<2->*!        System.out.println(polygon.getArea());
!*\onslide<2->*!
!*\onslide<2->*!        polygon = new Square(2);
!*\onslide<2->*!        System.out.println(polygon.getArea());
!*\onslide<2->*!    |ihl|}|ihl|
!*\onslide<2->*!|ihl|}|ihl|
\end{plainjava}
\begin{itemize}
    \item<3-> Beide fein! Durch \textit{dynamische Bindung} wird \bjava[morekeywords={[3]{PolygonTest,RegularPolygon,EquilateralTriangle,PolygonAreaTest,Square}}]{EquilateralTriangle::}\bjava{getArea} und \bjava[morekeywords={[3]{PolygonTest,RegularPolygon,EquilateralTriangle,PolygonAreaTest,Square}}]{Square::getArea} für \bjava{polygon.getArea()} aufgerufen. \onslide<4->{So wird zunächst der Flächeninhalt des Dreiecks \info{\(3.87911\ldots\)} und dann der Flächeninhalt des Quadrates \info{\(4\)} ausgegeben.}
\end{itemize}
\end{frame}

\section{So they came. One. Final Time.}

%
\pgfmathsetmacro{\relativefibrethickness}{0.50}
\pgfmathsetmacro{\relativefibrevariation}{0.11}
\pgfmathsetmacro{\numberoffibres}{9}
\pgfmathsetmacro{\fibresteps}{25}
\pgfmathsetmacro{\boardwidth}{10}
\pgfmathsetmacro{\boardheight}{10}
\colorlet{backgroundcolor}{brown}
\colorlet{fibrecolor}{brown!82!black}
\definecolor{shieldsilver}{HTML}{C0C0C0}
\pgfmathsetmacro{\segmentwidth}{\boardwidth/(\numberoffibres+1)}
\pgfmathsetmacro{\segmentvariation}{\relativefibrethickness/2*\segmentwidth}

\pgfmathsetmacro{\secondfibre}{2*\segmentwidth}
\pgfmathsetmacro{\lastfibre}{\numberoffibres*\segmentwidth}

\pgfmathsetmacro{\stepheight}{\boardheight/\fibresteps}

\newsavebox\sadpengu \savebox\sadpengu{\tikz\pingu[eyes sad,wings grab,hair 3=pingu@black,body type=chubby,heart=shadeB];}
\newsavebox\staffpengu \savebox\staffpengu{\tikz\pingu[:hide,staff right];}

\newcommand<>\framerecap[3][lightgray!20!white]{\only#4{\savebox0{\scalebox{.45}{#3}}\scalebox{.8}{\tikz{\node[fill=#1,rounded corners=2pt,minimum width=3.65cm,minimum height=2.66cm](a){\usebox0};\node[gray,above left] at(a.south east){\footnotesize#2};}}\hfill}}
\begin{frame}[c,plain]
\centering\null\vfill\vfill
        \only<2-6|handout:0>{This is it.\\[4mm]}
        \only<3-6|handout:0>{Aus.\\[4mm]}
        \only<4-6|handout:0>{Vorbei.\\[4mm]}
        \only<5-6|handout:0>{\Large Noch Fragen?\quad \onslide<6|handout:0>{Viel Erfolg!}}
\only<7->{\begin{minipage}\linewidth
\framerecap<7->{Org}{\tikz{\pingu[wings wave,name=saphira,eyes wink,pants=cprimary,monocle right,xshift=-3.25cm]
\path[postaction={decorate},decoration={text along path, text={|\LARGE\Fontauri|Motivation!},text align={fit to path}}] (saphira-bill) ++ (90+55:45pt) arc (90+55:90-55:45pt);}}
\framerecap<8->{0}{\begin{tikzpicture}
    \only<2->{\pingu[right wing grab,cup=purple!90!green,name=saphira, left eye wink]}
\end{tikzpicture}}
\framerecap<9->{1}{\begin{tikzpicture}
    \pingu[name = herbertine, heart=purple!15!pingu@white, left wing hug, right wing wave,eyes shiny]
    \node[above, inner sep=1.5pt,scale=3, pingu@red!70!white] at(herbertine-wing-right-tip) {\faHeart};
    % \HerbertMarkers
\end{tikzpicture}\begin{tikzpicture}
    \pingu[name = herbert, heart=teal!15!pingu@white, wings shock, eyes shock,pumpkin-hat,pumpkin-hat outline=gray!70!pingu@bronze]
    % \HerbertMarkers
\end{tikzpicture}}
\framerecap<10->{2}{\begin{tikzpicture}
    \pingu[name = herbertine, heart=purple!15!pingu@white, eyes wink, left wing hug, right wing wave]
    \node[above, inner sep=1.5pt,scale=3, pingu@red!70!white] at(herbertine-wing-right-tip) {\faHeart};
\end{tikzpicture}\hspace*{-0.4cm}\begin{tikzpicture}
    \pingu[name = herbert, heart=teal!15!pingu@white, right wing hug, eyes shock]
\end{tikzpicture}}
\framerecap<11->{3}{\begin{tikzpicture}
    \pingu[name = herbertine,eyes wink, right wing wave,bow tie,glasses,hat]
    \pingu[name = herbert, xshift=2.75cm, wings grab, cup, eyes shiny, hair 2=pingu@green]
\end{tikzpicture}}\medskip\par
\framerecap<12->{4}{\begin{tikzpicture}
    \pingu[name=herbertine, left wing hug, right wing wave, hand cast right=\scalebox{2}{\color{pingu@red!50!white}\faHeart}]
    \pgfonlayer{foreground}
    \node[inner sep=1.5pt,scale=1.25,pingu@red!50!white] at(herbertine-eye-left) {\large\faHeart};
    \node[inner sep=1.5pt,scale=1.25,pingu@red!50!white] at(herbertine-eye-right) {\large\faHeart};
    \endpgfonlayer
    \pingu[name = herbert, xshift=3.1cm,right wing hug, sunglasses,eyes wink]
\end{tikzpicture}}
\framerecap<13->{5}{\begin{tikzpicture}
	\pingu[crown 2d=pingu@bronze,
	       medal=pingu@purple, tie,
	       eye patch left,
	       eye patch right,
	       right wing wave, sunglasses,
	       glow thick=pingu@yellow]
\end{tikzpicture}}
\framerecap<14->{6}{\begin{tikzpicture}
    \node[scale=.265,rotate=-13] (bb) at (0,0) {\usebox\beebox};
    \node[left,yshift=-16mm,scale=1.33] at (bb.west) {\usebox\pingudoc};
\end{tikzpicture}}
\colorlet{@ping@bg}{pingu@red!73!pingu@black}%
\framerecap<15->[@ping@bg]{7}{\tikz\pingu[body=@ping@bg!25!pingu@white,body front=!hide,feet color=@ping@bg!25!pingu@white,eyes wink,eyes color=@ping@bg!70!pingu@white,bill=none,santa hat=@ping@bg!25!pingu@white,santa hat second=@ping@bg!70!pingu@white,heart=@ping@bg!70!pingu@white];}
\framerecap<16->{8}{\scalebox{.5}{\raisebox{.2cm}{\scalebox{2.5}{\begin{tikzpicture}
    \doggo[height delta=.1mm,body=white!95!brown!89!pingu@red,eye=pingu@red!25!pingu@black]
\end{tikzpicture}}}\!\!\!\!\!
\scalebox{.8}{\begin{tikzpicture}
% Let ducks fight... whatever? ^^
    % \node at(0,0) {\includegraphics[width=4.25cm]{Durotan.png}};
    \node[scale=2.25] at (7,0) {\begin{tikzpicture}
        \duck[invisible,water=blue!90!white]
        \begin{scope}[xshift=-1.25cm,scale=1.1]
            \fill[gray,rotate=-24] (0.1,1.21) rectangle (1*1.1,1*1.23); % make triangle
            \fill[gray,rotate=-24]
                (1.2,1.22) ellipse (1*0.15 and 1*0.03) (1.08,1.22)
                ellipse (1*0.03 and 1*0.15);
        \end{scope}
        \duck[beard=red!20!brown]
        \node[red!20!brown,rounded corners=1,scale=0.72] at (0.59,1.76) {\rotatebox{-28}{\faMinus}};
        \node[red!20!brown,rounded corners=1,scale=0.75] at (0.86,1.70) {\rotatebox{-2}{\faMinus}};
        \duck[invisible,viking=gray]

        \begin{scope}[scale=0.1,xshift=2.75cm]
            % Shield
            \draw[line width=2.75pt,shieldsilver] (\boardwidth/2,\boardheight/2) circle (\boardwidth/2);
            % the dots:
            \pgfmathsetmacro\bwradius{\boardwidth/2+2.75/11 pt}
            \foreach \i in {0,20,...,360} {
                \fill[shieldsilver!85!black] (\boardwidth/2,\boardheight/2)++(\i:\bwradius) circle (3.75pt);
            }

            \clip (\boardwidth/2,\boardheight/2) circle (\boardwidth/2);
            \filldraw[backgroundcolor] (0,0) rectangle ++(\boardwidth,\boardheight);

            \foreach \x in {1,2,...,\numberoffibres}
            {
                \fill[fibrecolor] ($(\x*\segmentwidth-\segmentvariation,0) + (rand*\relativefibrevariation*\relativefibrethickness,0)$)
                \foreach \y in {1,...,\fibresteps}
                {   -- ($(\x*\segmentwidth-\segmentvariation,\y*\stepheight) + (rand*\relativefibrevariation*\relativefibrethickness,0)$)
                }
                -- ($(\x*\segmentwidth+\segmentvariation,\boardheight)+ (rand*\relativefibrevariation*\relativefibrethickness,0)$)
                \foreach \y in {\fibresteps,...,0}
                {   -- ($(\x*\segmentwidth+\segmentvariation,\y*\stepheight) + (rand*\relativefibrevariation*\relativefibrethickness,0)$)
                }
                -- cycle;
            }
            % shield post
            \fill[shieldsilver] (\boardwidth/2,\boardheight/2) circle (46.25pt);
            \foreach \i in {0,40,...,360} {
                \fill[shieldsilver!85!black] (\boardwidth/2,\boardheight/2)++(\i:40.25pt) circle (3.75pt);
            }
            \begin{scope}
                \fill[shieldsilver!85!black] (\boardwidth/2,\boardheight/2) circle (0.85);
                \clip (\boardwidth/2,\boardheight/2) circle (0.85);
                \shade[outer color=shieldsilver!85!black, inner color=shieldsilver!90!white] (\boardwidth/2-0.35,\boardheight/2+0.8) circle (1.32);
            \end{scope}
        \end{scope}
        %\def\swordscaler{1}
        %\fill[gray,rotate=24] (0.1,0.21) rectangle (\swordscaler*1.1,\swordscaler*0.23); % make triangle
        %\fill[gray!70!black,rotate=24]
        %    (1.2,0.22) ellipse (\swordscaler*0.15 and \swordscaler*0.03) (1.08,0.22)
        %    ellipse (\swordscaler*0.03 and \swordscaler*0.15);
    \end{tikzpicture}};
\end{tikzpicture}}}}\medskip\par
\strut\hfill\framerecap<17->{9}{\begin{tikzpicture}
    \pingu[body=pingu@black,body front=pingu@black,eyes wink,bill color=pingu@black,eyes color=pingu@black,feet color=pingu@black,tie=pingu@white]
\end{tikzpicture}}
\framerecap<18->{10}{\begin{tikzpicture}
    \duck[aodai=cprimary!50!black,tshirt=cprimary,conicalhat=brown,water=paletteA]
    \node[below left=-1.66cm,xshift=1cm,scale=0.36] at(current bounding box.north east) {\usebox\donotmesswithbeate};
\end{tikzpicture}}
\framerecap<19->{11}{\begin{tikzpicture}
    \pingu[left wing wave, eyes wink, rook, hair 2=pingu@green,name=saphira,sign post left=Li(s)t!,lightsaber right,right item angle=80]% torch :C
\end{tikzpicture}}
\framerecap<20->{12}{\begin{tikzpicture}
    \node[] (c) at (0,0) {\usebox\guidancepingu};
    \node[left=5mm] at(c.west) {\usebox\guidanceleft};
    \node[right=5mm] at(c.east) {\usebox\guidanceright};
\end{tikzpicture}}
\end{minipage}\medskip\par
\color{gray}\onslide<22->{Hat Spaß gemacht.}\quad\onslide<23->{Viel Erfolg an der Klausur!}\quad\onslide<24->{Bis dann und\ldots\ \textit{waddle on}!}}%
\vfill\begin{tikzpicture}[overlay,remember picture]
    \onslide<25-|handout:2>{
        \fill[darkgray,fill opacity=.8] (current page.south east) rectangle (current page.north west);
        \node[scale=2] (b) at(current page.center) {\usebox\sadpengu};
        \node[scale=2,rotate=10,yshift=1.3mm,xshift=2mm] at(b.south) {\usebox\staffpengu};
    }
    \onslide<21->{\node[above left,gray] at(current page.south east) {13};}
\end{tikzpicture}\null
\end{frame}

\iffull\end{document}\fi