
\RequirePackage[cmintegrals,cmbraces,ebgaramond]{newtxmath}
\InputIfFileExists{../global.src}\relax\relax

\iffull
\title[Viertes Tutorium -- Übungsblatt 4]{Schau mal -- ein Vokal\\\small Die Hexenjagd 4}
\date{\sffamily KW 47}


\usepackage{tikzpingus}

\hypersetup{colorlinks=false}

\begin{document}
\Titlepage{4}
\fi

\newsavebox\pingubox
\savebox\pingubox{\smash{\resizebox*!{.75\baselineskip}{\tikz\pingu[sunglasses,bow tie=pingu@black,cloak=pingu@black,eyes wink];}}}
\newsavebox\shockpingu
\savebox\shockpingu{\tikz\pingu[eyes angry,left wing shock, right wing wave,bill angry];}
\newsavebox\happypingu
\savebox\happypingu{\tikz\pingu[eyes wink,left wing shock, right wing wave,heart=shadeB];}
\newsavebox\holdpingu
\savebox\holdpingu{\tikz\pingu[wings raise,left eye angry,right eye devil,bill angry,pants=paletteB!60!pingu@black,body=pingu@black,small,pants bands];}
\section{Präsenzaufgabe}
\begin{frame}[c,fragile]{Präsenzaufgabe}
    \begin{aufgabe}{Maximal Medium --- Charakterlimit erreicht}
\begin{onlyenv}<2-4|handout:0>
\begin{plainjava}
public class Statistics {
    public static void main(String[] args) {
        // Zwischen 10 und 20
        int length = (int) (Math.random() * 11 + 10);
        int randoms[] = new int[arrayLength];

        for(int i = 0; i < length; i++) {
            // Zwischen 1 und 100
            randoms[i] = (int) (Math.random() * 100 + 1);
        }

        // !*\usebox\pingubox*! Platzhalterpingu
    }
}
\end{plainjava}
\end{onlyenv}
\begin{uncoverenv}<5-|handout:1>
\vspace*{-.33\baselineskip}\lstfs{9}%
\begin{plainjava}[aboveskip=0pt,belowskip=0pt,lineskip=1pt]
public class Statistics {
    public static void main(String[] args) {
        // Zwischen 10 und 20
        int length = (int) (Math.random() * 11 + 10);
        int[] randoms = new int[arrayLength];

        for(int i = 0; i < length; i++) {
            // Zwischen 1 und 100
            randoms[i] = (int) (Math.random() * 100 + 1);
        }

        // !*\usebox\pingubox*! Platzhalterpingu
    }
}
\end{plainjava}
\end{uncoverenv}
        \onslide<1->
    \end{aufgabe}
\begin{tikzpicture}[overlay,remember picture]
\onslide<3-4|handout:0>{
    \node[above left=2mm,yshift=3mm] (p) at(current page.south east) {\usebox\shockpingu};
}
\onslide<5|handout:0>{
    \node[above left=2mm,yshift=3mm] (p2) at(current page.south east) {\usebox\happypingu};
    \node[above,rounded corners=2pt,fill=white] at(p2.north) {~~~~~~Better};
}
\onslide<4|handout:0>{
    \node[above,align=center,rounded corners=2pt,fill=white] at(p.north) {That does not\\look right\ldots};
}
% break slide!
\onslide<7->{
    \node[above left=2mm,yshift=3.9mm,xshift=-1cm] (p) at(current page.south east) {\usebox\holdpingu};
    \pgfonlayer{background}
\onslide<7->{
    \node[rectangle,rounded corners=1.25pt,fill=white,thick,above,draw=gray,text width=4.7cm,minimum height=3.4cm,font=\footnotesize] at([yshift=-8.75mm]p.north) {Ersetzen Sie \usebox\pingubox\ mit Code zur Berechnung der folgenden statistische Kenngrößen für \T{randoms}: 1)~Minimum, 2)~Maximum,\\3)~Mittelwert und 4)~Median.\\Geben Sie sie aus.\vspace*{14pt}};
}
    \endpgfonlayer
}

\onslide<8->{
    \node[rectangle,rounded corners=1.25pt,fill=white,thick,above,draw=gray,rotate=-10,font=\footnotesize] (nms) at([xshift=5mm,yshift=12mm]current page.south) {\bjava{Arrays::sort} sortiert ein Array!};
    \draw[line width=2.5pt,line cap=round,pingu@bronze] ([xshift=1.2pt,yshift=-1.2pt]nms.east) -- ++(1.44cm,2.22cm);
}
\onslide<9->{
    \node[rectangle,rounded corners=1.25pt,fill=white,thick,above,draw=gray,rotate=5.55,font=\footnotesize,above right] at(nms.north) {\bjava{java.util.Arrays}};
}
\end{tikzpicture}%
\end{frame}

\begin{frame}[t,fragile]{Präsenzaufgabe - Lösung}
    \begin{itemize}[<+(1)->]
    \item Der gesamte Code ist wieder hier: \only<2->{\textattachfile{\curpath Statistics.java}{Statistics.java}}
    \item Sortieren macht das finden von Mini- und Maximum leicht:
\begin{plainjava}
!*\onslide<4->*!Arrays.sort(randoms);

!*\onslide<4->*!int min = randoms[0]; // first
!*\onslide<4->*!int max = randoms[length-1]; // last
\end{plainjava}
\end{itemize}
\end{frame}

\begin{frame}[t,fragile]{Präsenzaufgabe - Lösung}
    \begin{itemize}[<+(1)->]
    \item Es geht mir mittelmäßig. Ich komm schon drüber weg\ldots
\begin{plainjava}
!*\onslide<3->*!double avg = 0.0;
!*\onslide<4->*!for(int i = 0; i < length; i++) {
!*\onslide<5->*!    avg += randoms[i];
!*\onslide<4->*!}
!*\onslide<6->*!avg /= length; // avg = avg / length;
\end{plainjava}
\end{itemize}
\end{frame}

\begin{frame}[t,fragile]{Präsenzaufgabe - Lösung}
    \begin{itemize}[<+(1)->]
    \item Der Median ist bei ungerade vielen Elementen das mittlere und sonst der Durchschnitt der mittleren Elemente:
\begin{plainjava}
!*\onslide<3->*!double med = 0.0;
!*\onslide<4->*!if(length % 2 == 1) {
!*\onslide<5->*!    med = randoms[(length / 2)];
!*\onslide<4->*!} else {
!*\onslide<6->*!    med = randoms[(length / 2) - 1] + randoms[(length / 2)];
!*\onslide<6->*!    med /= 2; // med = med / 2;
!*\onslide<4->*!}
\end{plainjava}
\end{itemize}
\end{frame}

\iffull\rExecute{javac Statistics.java}\fi
\begin{frame}[t,fragile]{Präsenzaufgabe - Lösung}
    \begin{itemize}[<+(1)->]
    \item Und nun der shout-out an die Fans:
\begin{plainjava}
!*\onslide<3->*!System.out.println("Minimum: " + min);
!*\onslide<3->*!System.out.println("Maximum: " + max);
!*\onslide<3->*!System.out.println("Mittelwert: " + avg);
!*\onslide<3->*!System.out.println("Median: " + med);
\end{plainjava}
    \iffull\item<4-> \rbash[:\pause]{java Statistics}\fi
\end{itemize}
\end{frame}

\section{Abgabeformalitäten}
\iffull
\begin{frame}[c,plain]{}
\tikzpicture[overlay,remember picture]
\fill[pingu@black] (current page.south east) rectangle (current page.north west);
\onslide<2->{\node[pingu@white,above,scale=1.66] (c) at (current page.center) {\bfseries They've come\ldots};}
\onslide<3->{\node[pingu@white,below,scale=1.66] at (c.south) {The Abgabeformalitäten are here.};}
\endtikzpicture
\end{frame}
\fi

\newsavebox\pinguitembox \savebox\pinguitembox{\strut\resizebox*!{.66\baselineskip}{\tikz\pingu[left wing wave,eyes shiny,halo];}}
\begin{frame}[c]{Abgabeformalitäten}
\begin{itemize}[<+(1)->]
    \item Java-Programmieraufgaben:\par
\tikzpicture
    \node[text width=.525\linewidth] (b) at(0,0) {\begin{itemize}
        \item[\usebox\pinguitembox] Nichts handschriftliches oder Pseudocode.
        \item[\usebox\pinguitembox] Nur \T{.java}-Dateien
        \item[\usebox\pinguitembox] (Teil-)Aufgabe in separaten \T{.java}-Dateien.
        \item[\usebox\pinguitembox] Formatierung nicht wie bei Hempels unterm Sofa.
    \end{itemize}};
    \only<7->{%
    \draw[decoration={brace,amplitude=6pt},decorate] (b.north east) -- (b.south east) node[pos=.5,right=2mm,text width=.475\linewidth] {Sonst (über Blätter hinweg): \begin{enumerate}
        \item<8-> Mal: \(-25\%\) der Punkte der Teilaufgabe
        \item<9-> Mal: \(-50\%\) der Punkte der Teilaufgabe
        \item<10-> Mal: \(-100\%\) der Punkte der Teilaufgabe
    \end{enumerate}};
    }
    \endtikzpicture
    \item<11-> Sie müssen \usebox\pinguitembox~\textbf{immer}~\reflectbox{\usebox\pinguitembox} lauffähig sein. \begin{itemize}
        \item<12-> Fehlerhaften Code auskommentieren
        \item<13-> Anmerken, was das Ziel war.
    \end{itemize}
    \onslide<14->{Sonst \textit{null Punkte}.}
\end{itemize}
\end{frame}

\tikzset{path image/.style={
    path picture={
    \node at (path picture bounding box.center) {
    \includegraphics[width=4.35cm]{#1}
    };}}}
\begin{frame}[c]{Abgabeformalitäten\hfill II}
\begin{itemize}[<+(1)->]
    \itemsep=13pt
    \item Textaufgaben:
    \begin{itemize}
        \item Handschriftlich ist Ok, sofern lesbar.
        \item \LaTeX\ ist tsöööön (\resizebox*!{.66\baselineskip}{\tikz{\pingu[wings grab,eyes shiny,heart=pingu@purple!20!white,name=pingu]; \node[pingu@red] at(pingu-belly-center) {\faHeart};}}) aber \textbf{nicht verpflichtend}.
        \item Wir öffnen nur \T{.java}, \T{.txt} und \T{.pdf} Formate.
    \end{itemize}
    \item Allgemein
    \begin{itemize}
        \item Sprecht mit anderen und tauscht eure \textbf{Ideen} aus.
        \item Aber bitte nicht eure Lösungen.
        \item Es soll übermotivierte Tutoren geben, die an Clone-Detection arbeiten\ldots\\
        und die sich alle Abgaben und Bewertungen ansehen.
        \item<9-|handout:0> Koko hat hier noch tolle Memes. Ich nicht. \onslide<10->{Odeeeer?}
    \end{itemize}
\end{itemize}
\iffull\onslide<11-|handout:0>{\begin{tikzpicture}[overlay,remember picture]
    \draw[path image=meme.png,gray,rounded corners=2pt] ([xshift=-.45cm,yshift=-1.85cm]current page.north east) rectangle ++(-4.35cm,-3.75cm);
    % \node[below left=.5cm,yshift=-1.35cm,inner sep=0pt,draw,rounded corners=2pt] at(current page.north east) {\includegraphics[width=4.35cm]{meme.png}};
\end{tikzpicture}}\fi
\end{frame}

\section{Übungsblatt 4}
\subsection{Aufgabe 1}
\begin{frame}[fragile]{Übungsblatt 4 - Aufgabe 1}
    \begin{itemize}[<+(1)->]
        \item Banale Vokale \only<2->{\textattachfile{\curpath CountVowels.java}{CountVowels.java}}
\begin{plainjava}
!*\onslide<3->*!int a = 0, e = 0, i = 0, o = 0, u = 0;
!*\onslide<3->*!
!*\onslide<4->*!for(int j = 0; j < input.length(); j++) {
!*\onslide<5->*!    switch(input.toLowerCase().charAt(j)) {
!*\onslide<6->*!        case 'a': a++; break;
!*\onslide<7->*!        case 'e': e++; break;
!*\onslide<7->*!        case 'i': i++; break;
!*\onslide<7->*!        case 'o': o++; break;
!*\onslide<7->*!        case 'u': u++; break;
!*\onslide<5->*!    }
!*\onslide<4->*!}
\end{plainjava}
    \end{itemize}
\end{frame}

\begin{frame}[fragile]{Übungsblatt 4 - Aufgabe 1}
    \begin{itemize}[<+(1)->]
        \item Und die Ausgabe:
\begin{plainjava}
!*\onslide<3->*!System.out.println("a: " + a);
!*\onslide<3->*!System.out.println("e: " + e);
!*\onslide<3->*!System.out.println("i: " + i);
!*\onslide<3->*!System.out.println("o: " + o);
!*\onslide<3->*!System.out.println("u: " + u);
\end{plainjava}
    \end{itemize}
\end{frame}

\iffull
\begin{frame}[c]{Übungsblatt 4 - Aufgabe 1}
\begin{center}
    \LARGE\pause\textbf{Und nun\ldots}\\
    \pause Entdecke den \textbf{Overengineer-Kavalier} in dir\bigskip\\
    \pause \scriptsize Schnabeltier
\end{center}
\end{frame}
\fi

\begin{frame}[fragile,c]{Übungsblatt 4 - Aufgabe 1\hfill Schweigender Bonus}
\begin{columns}[onlytextwidth,c]
\column{.375\linewidth}
\lstfs{6}\pause
\begin{plainjava}
int a = 0, e = 0, i = 0, o = 0, u = 0;

for(int j = 0; j < input.length(); j++) {
    switch(input.toLowerCase().charAt(j)) {
        case 'a': a++; break;
        case 'e': e++; break;
        case 'i': i++; break;
        case 'o': o++; break;
        case 'u': u++; break;
    }
}

System.out.println("a: " + a);
System.out.println("e: " + e);
System.out.println("i: " + i);
System.out.println("o: " + o);
System.out.println("u: " + u);
\end{plainjava}
\column{.625\linewidth}
\lstfs{9}\pause
\begin{plainjava}
!*\onslide<3->*!char[] arr  = input.toLowerCase().toCharArray();
!*\onslide<4->*!int[] counters = new int[26];

!*\onslide<5->*!for(int j = 0; j < arr.length; j++) {
!*\onslide<6->*!    char c = arr[j];
!*\onslide<7->*!    if('a' <= c && c <= 'z')
!*\onslide<8->*!        counters[c - 'a'] += 1;
!*\onslide<5->*!}

!*\onslide<9->*!for(char c : new char[]{'a', 'e', 'i', 'o', 'u'}) {
!*\onslide<10->*!    System.out.println(c+": " + counters[c - 'a']);
!*\onslide<9->*!}
\end{plainjava}
\end{columns}
\end{frame}

\subsection{Aufgabe 2}
\begin{frame}[fragile]{Übungsblatt 4 - Aufgabe 2}
    \begin{itemize}[<+(1)->]
        \item Isch bin ene Primeel: \only<2->{\textattachfile{\curpath PrimeFactors.java}{PrimeFactors.java}}.
        \item Starting with the guardians of the C:\lstfs{10}
\begin{plainjava}
!*\onslide<4->*!if (args.length != 1) System.exit(1);
!*\onslide<4->*!
!*\onslide<5->*!int N = Integer.parseInt(args[0]);
!*\onslide<6->*!if (N < 1) {
!*\onslide<7->*!    System.exit(1);
!*\onslide<6->*!} else if (N == 1) {
!*\onslide<8->*!    System.out.println("Die Zahl 1 besitzt keine Primfaktorzerlegung");
!*\onslide<8->*!    return;
!*\onslide<6->*!}
\end{plainjava}
    \end{itemize}
\end{frame}

\begin{frame}[fragile]{Übungsblatt 4 - Aufgabe 2}
    \begin{itemize}[<+(1)->]
        \item Wir verwenden die Hinweise und Sieben:
\begin{plainjava}
!*\onslide<3->*!boolean marker[] = new boolean[N + 1];
!*\onslide<4->*!for (int i = 0; i <= N; i++)
!*\onslide<4->*!    marker[i] = false; // Sicha ist Sicha!
!*\onslide<3->*!
!*\onslide<5->*!for (int i = 2; i < Math.sqrt(N); i++) {
!*\onslide<6->*!    if (!marker[i]) {
!*\onslide<7->*!        for (int j = i * i; j <= N; j += i) {
!*\onslide<8->*!            marker[j] = true;
!*\onslide<7->*!        }
!*\onslide<6->*!    }
!*\onslide<5->*!}
\end{plainjava}
    \end{itemize}
\end{frame}

\begin{frame}[fragile]{Übungsblatt 4 - Aufgabe 2}
    \begin{itemize}[<+(1)->]
        \item Und nun mit den Primlies verhackseln:\lstfs{10}
\begin{plainjava}
!*\onslide<3->*!System.out.print("Die Primfaktorzerlegung von " + N + " lautet: ");
!*\onslide<4->*!while (N >= 2) {
!*\onslide<5->*!    for (int i = 2; i < marker.length; i++) {
!*\onslide<6->*!        if (marker[i]) continue;
!*\onslide<7->*!        if ((N % i) == 0) {
!*\onslide<8->*!            N /= i; // N = N / i;
!*\onslide<9->*!            System.out.print((N >= 2) ? i + " * " : i);
!*\onslide<10->*!            break; // Notwendig?
!*\onslide<7->*!        }
!*\onslide<5->*!    }
!*\onslide<4->*!}
!*\onslide<3->*!System.out.println();
\end{plainjava}
    \end{itemize}
\end{frame}

\iffull \rExecute{javac PrimeFactors.java} \fi
\begin{frame}[fragile]{Übungsblatt 4 - Aufgabe 2 \hfill Alternativ}
    \begin{itemize}[<+(1)->]
        \item Oder direkt wiederholt anwenden:\lstfs{10}
\begin{plainjava}
!*\onslide<3->*!System.out.print("Die Primfaktorzerlegung von " + N + " lautet: ");
!*\onslide<4->*!for (int i = 2; i < marker.length; i++) {
!*\onslide<5->*!    if (marker[i]) continue;
!*\onslide<6->*!    while ((N % i) == 0) {
!*\onslide<7->*!        N /= i;
!*\onslide<8->*!        System.out.print((N >= 2) ? i + " * " : i);
!*\onslide<6->*!    }
!*\onslide<4->*!}
!*\onslide<3->*!System.out.println("");
\end{plainjava}
    \iffull\item<9-> \lstfs{9}\rbash[:\pause]{java PrimeFactors 12301234}\fi
    \end{itemize}
\end{frame}

\iffull \rExecute{javac PrimeFactorsAlternate.java} \fi
\begin{frame}[fragile]{Übungsblatt 4 - Aufgabe 2 \hfill Die alternative Alternative}
    \begin{itemize}[<+(1)->]
        \item Wir können das Sieb direkt integrieren\ldots\ (\only<2->{\textattachfile{\curpath PrimeFactorsAlternate.java}{PrimeFactorsAlternate.java}})\lstfs{10}
\begin{plainjava}
!*\onslide<3->*!System.out.print("Die Primfaktorzerlegung von " + N + " lautet: ");
!*\onslide<4->*!int max = N;
!*\onslide<5->*!for (int i = 2; i <= max; i++) {
!*\onslide<6->*!    while ((N % i) == 0) {
!*\onslide<7->*!        N /= i;
!*\onslide<7->*!        System.out.print((N >= 2) ? i + " * " : i);
!*\onslide<6->*!    }
!*\onslide<5->*!}
!*\onslide<3->*!System.out.println("");
\end{plainjava}
    \iffull\item<8-> \lstfs{9}\rbash[:\pause]{java PrimeFactorsAlternate 12301234}\fi
    \end{itemize}
\end{frame}


\section{Der End-Pingu}
\begin{frame}[c]
    \hbox{}\hfill
    \onslide<2->{\begin{tikzpicture}[scale=1.15]
        \pingu[name=herbertine, left wing hug, right wing wave, hand cast right=\scalebox{2}{\color{pingu@red!50!white}\faHeart}]
        \pgfonlayer{foreground}
        \node[inner sep=1.5pt, ,scale=1.25,pingu@red!50!white] at(herbertine-eye-left) {\large\faHeart};
        \node[inner sep=1.5pt, ,scale=1.25,pingu@red!50!white] at(herbertine-eye-right) {\large\faHeart};
        \endpgfonlayer
        \pingu[name = herbert, xshift=3.1cm,right wing hug, sunglasses,eyes wink]
    \end{tikzpicture}}\hfill\null
\end{frame}
\iffull\end{document}\fi
